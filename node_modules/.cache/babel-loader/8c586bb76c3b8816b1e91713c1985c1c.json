{"ast":null,"code":"var _jsxFileName = \"/home/salihu/React/Projects/geospatial-data/src/Marks.js\";\nimport { line, curveNatural } from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Marks = _ref => {\n  let {\n    data,\n    xScale,\n    yScale,\n    xValue,\n    yValue,\n    tooltipFormat,\n    circleRadius\n  } = _ref;\n  return data.map(d => /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"marks\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      fill: \"none\",\n      stroke: \"black\",\n      d: line().x(d => xScale(xValue(d))).y(d => yScale(yValue(d))).curve(curveNatural)(data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this));\n};\n\n_c = Marks;\nexport default Marks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"sources":["/home/salihu/React/Projects/geospatial-data/src/Marks.js"],"names":["line","curveNatural","Marks","data","xScale","yScale","xValue","yValue","tooltipFormat","circleRadius","map","d","x","y","curve"],"mappings":";AAAA,SAASA,IAAT,EAAeC,YAAf,QAAmC,IAAnC;;;AAEA,MAAMC,KAAK,GAAG;AAAA,MAAC;AACbC,IAAAA,IADa;AAEbC,IAAAA,MAFa;AAGbC,IAAAA,MAHa;AAIbC,IAAAA,MAJa;AAKbC,IAAAA,MALa;AAMbC,IAAAA,aANa;AAObC,IAAAA;AAPa,GAAD;AAAA,SASZN,IAAI,CAACO,GAAL,CAAUC,CAAD,iBACP;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA,2BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,MAAM,EAAC,OAFT;AAGE,MAAA,CAAC,EAAEX,IAAI,GACJY,CADA,CACGD,CAAD,IAAOP,MAAM,CAACE,MAAM,CAACK,CAAD,CAAP,CADf,EAEAE,CAFA,CAEGF,CAAD,IAAON,MAAM,CAACE,MAAM,CAACI,CAAD,CAAP,CAFf,EAGAG,KAHA,CAGMb,YAHN,EAGoBE,IAHpB;AAHL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,CATY;AAAA,CAAd;;KAAMD,K;AAgCN,eAAeA,KAAf","sourcesContent":["import { line, curveNatural } from \"d3\";\n\nconst Marks = ({\n  data,\n  xScale,\n  yScale,\n  xValue,\n  yValue,\n  tooltipFormat,\n  circleRadius,\n}) =>\n  data.map((d) => (\n    <g className=\"marks\">\n      <path\n        fill=\"none\"\n        stroke=\"black\"\n        d={line()\n          .x((d) => xScale(xValue(d)))\n          .y((d) => yScale(yValue(d)))\n          .curve(curveNatural)(data)}\n      />\n      {\n        // <circle\n        //   className=\"mark\"\n        //   cx={xScale(xValue(d))}\n        //   cy={yScale(yValue(d))}\n        //   r={circleRadius}\n        // >\n        //   <title>{tooltipFormat(xValue(d))}</title>\n        // </circle>\n      }\n    </g>\n  ));\n\nexport default Marks;\n"]},"metadata":{},"sourceType":"module"}