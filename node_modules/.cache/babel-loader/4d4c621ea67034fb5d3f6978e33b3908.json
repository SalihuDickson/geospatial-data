{"ast":null,"code":"var _jsxFileName = \"/home/salihu/React/Projects/geospatial-data/src/Marks.js\";\nimport { geoNaturalEarth1, geoPath, geoGraticule } from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projection = geoNaturalEarth1();\nconst path = geoPath(projection);\nconst graticule = geoGraticule();\n\nconst Marks = _ref => {\n  let {\n    data: {\n      countries,\n      interiors\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"marks\",\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      className: \"sphere\",\n      d: path({\n        type: \"Sphere\"\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), countries.features.map(feature => /*#__PURE__*/_jsxDEV(\"path\", {\n      className: \"country\",\n      d: path(feature)\n    }, feature.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)), /*#__PURE__*/_jsxDEV(\"path\", {\n      className: \"interior\",\n      d: path(interiors)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      className: \"graticlules\",\n      d: path(graticule())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Marks;\nexport default Marks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"sources":["/home/salihu/React/Projects/geospatial-data/src/Marks.js"],"names":["geoNaturalEarth1","geoPath","geoGraticule","projection","path","graticule","Marks","data","countries","interiors","type","features","map","feature","id"],"mappings":";AAAA,SAASA,gBAAT,EAA2BC,OAA3B,EAAoCC,YAApC,QAAwD,IAAxD;;AAEA,MAAMC,UAAU,GAAGH,gBAAgB,EAAnC;AACA,MAAMI,IAAI,GAAGH,OAAO,CAACE,UAAD,CAApB;AACA,MAAME,SAAS,GAAGH,YAAY,EAA9B;;AAEA,MAAMI,KAAK,GAAG;AAAA,MAAC;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb;AAAR,GAAD;AAAA,sBACZ;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,CAAC,EAAEL,IAAI,CAAC;AAAEM,QAAAA,IAAI,EAAE;AAAR,OAAD;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,SAAS,CAACG,QAAV,CAAmBC,GAAnB,CAAwBC,OAAD,iBACtB;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,CAAC,EAAET,IAAI,CAACS,OAAD;AAAjC,OAAiDA,OAAO,CAACC,EAAzD;AAAA;AAAA;AAAA;AAAA,YADD,CAFH,eAKE;AAAM,MAAA,SAAS,EAAC,UAAhB;AAA2B,MAAA,CAAC,EAAEV,IAAI,CAACK,SAAD;AAAlC;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,CAAC,EAAEL,IAAI,CAACC,SAAS,EAAV;AAArC;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADY;AAAA,CAAd;;KAAMC,K;AAWN,eAAeA,KAAf","sourcesContent":["import { geoNaturalEarth1, geoPath, geoGraticule } from \"d3\";\n\nconst projection = geoNaturalEarth1();\nconst path = geoPath(projection);\nconst graticule = geoGraticule();\n\nconst Marks = ({ data: { countries, interiors } }) => (\n  <g className=\"marks\">\n    <path className=\"sphere\" d={path({ type: \"Sphere\" })}></path>\n    {countries.features.map((feature) => (\n      <path className=\"country\" d={path(feature)} key={feature.id} />\n    ))}\n    <path className=\"interior\" d={path(interiors)} />\n    <path className=\"graticlules\" d={path(graticule())} />\n  </g>\n);\n\nexport default Marks;\n"]},"metadata":{},"sourceType":"module"}