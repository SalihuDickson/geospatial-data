{"ast":null,"code":"var _jsxFileName = \"/home/salihu/React/Projects/geospatial-data/src/AxisBottom.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AxisBottom = _ref => {\n  let {\n    xScale,\n    innerHeight,\n    tickFormat,\n    tickOffset = 3\n  } = _ref;\n  return xScale.ticks().map(tickValue => /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"tick\",\n    transform: `translate(${xScale(tickValue)},0)`,\n    children: [/*#__PURE__*/_jsxDEV(\"line\", {\n      y2: innerHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      style: {\n        textAnchor: \"middle\"\n      },\n      dy: \".71em\",\n      y: innerHeight + tickOffset,\n      children: tickFormat(tickValue)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, tickValue, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this));\n};\n\n_c = AxisBottom;\nexport default AxisBottom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AxisBottom\");","map":{"version":3,"sources":["/home/salihu/React/Projects/geospatial-data/src/AxisBottom.js"],"names":["AxisBottom","xScale","innerHeight","tickFormat","tickOffset","ticks","map","tickValue","textAnchor"],"mappings":";;;AAAA,MAAMA,UAAU,GAAG;AAAA,MAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,WAAV;AAAuBC,IAAAA,UAAvB;AAAmCC,IAAAA,UAAU,GAAG;AAAhD,GAAD;AAAA,SACjBH,MAAM,CAACI,KAAP,GAAeC,GAAf,CAAoBC,SAAD,iBACjB;AACE,IAAA,SAAS,EAAC,MADZ;AAGE,IAAA,SAAS,EAAG,aAAYN,MAAM,CAACM,SAAD,CAAY,KAH5C;AAAA,4BAKE;AAAM,MAAA,EAAE,EAAEL;AAAV;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AACE,MAAA,KAAK,EAAE;AAAEM,QAAAA,UAAU,EAAE;AAAd,OADT;AAEE,MAAA,EAAE,EAAC,OAFL;AAGE,MAAA,CAAC,EAAEN,WAAW,GAAGE,UAHnB;AAAA,gBAKGD,UAAU,CAACI,SAAD;AALb;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,KAEOA,SAFP;AAAA;AAAA;AAAA;AAAA,UADF,CADiB;AAAA,CAAnB;;KAAMP,U;AAkBN,eAAeA,UAAf","sourcesContent":["const AxisBottom = ({ xScale, innerHeight, tickFormat, tickOffset = 3 }) =>\n  xScale.ticks().map((tickValue) => (\n    <g\n      className=\"tick\"\n      key={tickValue}\n      transform={`translate(${xScale(tickValue)},0)`}\n    >\n      <line y2={innerHeight} />\n      <text\n        style={{ textAnchor: \"middle\" }}\n        dy=\".71em\"\n        y={innerHeight + tickOffset}\n      >\n        {tickFormat(tickValue)}\n      </text>\n    </g>\n  ));\n\nexport default AxisBottom;\n"]},"metadata":{},"sourceType":"module"}