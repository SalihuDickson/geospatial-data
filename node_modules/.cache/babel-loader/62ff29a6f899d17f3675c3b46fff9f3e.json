{"ast":null,"code":"var _jsxFileName = \"/home/salihu/React/Projects/geospatial-data/src/Marks.js\";\nimport { geoEqualEarth, geoPath } from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projection = geoEqualEarth();\nconst path = geoPath(projection);\n\nconst Marks = _ref => {\n  let {\n    data\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"marks\",\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      className: \"sphere\",\n      d: path({\n        type: \"Sphere\"\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this), data.features.map(feature => /*#__PURE__*/_jsxDEV(\"path\", {\n      className: \"features\",\n      d: path(feature)\n    }, feature.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Marks;\nexport default Marks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"sources":["/home/salihu/React/Projects/geospatial-data/src/Marks.js"],"names":["geoEqualEarth","geoPath","projection","path","Marks","data","type","features","map","feature","id"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,OAAxB,QAAuC,IAAvC;;AAEA,MAAMC,UAAU,GAAGF,aAAa,EAAhC;AACA,MAAMG,IAAI,GAAGF,OAAO,CAACC,UAAD,CAApB;;AAEA,MAAME,KAAK,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBACZ;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,CAAC,EAAEF,IAAI,CAAC;AAAEG,QAAAA,IAAI,EAAE;AAAR,OAAD;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,IAAI,CAACE,QAAL,CAAcC,GAAd,CAAmBC,OAAD,iBACjB;AAAM,MAAA,SAAS,EAAC,UAAhB;AAA2B,MAAA,CAAC,EAAEN,IAAI,CAACM,OAAD;AAAlC,OAAkDA,OAAO,CAACC,EAA1D;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADY;AAAA,CAAd;;KAAMN,K;AASN,eAAeA,KAAf","sourcesContent":["import { geoEqualEarth, geoPath } from \"d3\";\n\nconst projection = geoEqualEarth();\nconst path = geoPath(projection);\n\nconst Marks = ({ data }) => (\n  <g className=\"marks\">\n    <path className=\"sphere\" d={path({ type: \"Sphere\" })}></path>\n    {data.features.map((feature) => (\n      <path className=\"features\" d={path(feature)} key={feature.id} />\n    ))}\n  </g>\n);\n\nexport default Marks;\n"]},"metadata":{},"sourceType":"module"}