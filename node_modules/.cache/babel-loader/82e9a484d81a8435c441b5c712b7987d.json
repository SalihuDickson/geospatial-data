{"ast":null,"code":"var _jsxFileName = \"/home/salihu/React/Projects/geospatial-data/src/AxisLeft.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AxisLeft = _ref => {\n  let {\n    yScale,\n    innerWidth,\n    tickOffset = 3\n  } = _ref;\n  return yScale.ticks().map(tickValue => /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"tick\",\n    transform: `translate(0,${yScale(tickValue)})`,\n    children: [/*#__PURE__*/_jsxDEV(\"line\", {\n      x2: innerWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      style: {\n        textAnchor: \"end\"\n      },\n      x: -tickOffset,\n      dy: \".32em\",\n      children: tickValue\n    }, tickValue, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this));\n};\n\n_c = AxisLeft;\nexport default AxisLeft;\n\nvar _c;\n\n$RefreshReg$(_c, \"AxisLeft\");","map":{"version":3,"sources":["/home/salihu/React/Projects/geospatial-data/src/AxisLeft.js"],"names":["AxisLeft","yScale","innerWidth","tickOffset","ticks","map","tickValue","textAnchor"],"mappings":";;;AAAA,MAAMA,QAAQ,GAAG;AAAA,MAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA,UAAU,GAAG;AAAnC,GAAD;AAAA,SACfF,MAAM,CAACG,KAAP,GAAeC,GAAf,CAAoBC,SAAD,iBACjB;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,IAAA,SAAS,EAAG,eAAcL,MAAM,CAACK,SAAD,CAAY,GAAhE;AAAA,4BACE;AAAM,MAAA,EAAE,EAAEJ;AAAV;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAEE,MAAA,KAAK,EAAE;AAAEK,QAAAA,UAAU,EAAE;AAAd,OAFT;AAGE,MAAA,CAAC,EAAE,CAACJ,UAHN;AAIE,MAAA,EAAE,EAAC,OAJL;AAAA,gBAMGG;AANH,OACOA,SADP;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADe;AAAA,CAAjB;;KAAMN,Q;AAeN,eAAeA,QAAf","sourcesContent":["const AxisLeft = ({ yScale, innerWidth, tickOffset = 3 }) =>\n  yScale.ticks().map((tickValue) => (\n    <g className=\"tick\" transform={`translate(0,${yScale(tickValue)})`}>\n      <line x2={innerWidth} />\n      <text\n        key={tickValue}\n        style={{ textAnchor: \"end\" }}\n        x={-tickOffset}\n        dy=\".32em\"\n      >\n        {tickValue}\n      </text>\n    </g>\n  ));\n\nexport default AxisLeft;\n"]},"metadata":{},"sourceType":"module"}